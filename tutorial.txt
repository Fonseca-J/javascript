Boas Práticas na Programação:

1) Documentação
/**
 * Descrição do código (o que faz?)
 * @author Nome do autor do código
 * @link https:// ....
 */

2) Código Limpo
 - Não abusar de comentários

3) Nomeação:
   - Não usar caracteres especiais, espaços e acentos
   - Nomes de aqrquivos, variáveis devem ser escritos com (letra minúscula), iniciar com caixa alta (letra maiúscula) apenas em classes modelos.
   - definir nomes que tenham relação com problemas a serem resolvidos.

4) Alinhamento (identação do código)

5) Utilizar a menor quantidade de código possível



  
   
 
 ------------------------------------------------------------------------------------------------
 Comandos de terminal:

 cls ou clear ctrl+l (limpar a tela do terminal)
 node -v (exibe a versão do node)
 cd pasta (entar na pasta)
 cd .. (voltar um nível)
 dir ou ls (listar arquivos e diretórios)
 node arquivo.js (executar um arquivo JavaScript)
 seta pra cima (repete o comando)
 <tab> completa o comando
__________________________________________________________________________________________________
VSCode: Dicas
- combinação de teclas
    Alt + Shift + f //alinhamento
    VS Code: Produtividade Infinita (repositório)


__________________________________________________________________________________________________
JavaScript

Características:

- Sentenças e não linhas de código
- ; é opcional
- console.clear() //limpar a tela do console
- console.log() //escrever no console
- // comentário de linhas
Podemos usar aspas "  " ou ' '
Não podemos usar " ' aspas diferentes
Dica: Usar em "textos" aspas
      Usar em bibliotecas ou caminhos 'apóstrofe'

___________________________________________________________________________________________________
Operedores

 Observação:
 - Regra de Precedência
 - % (não calcula porcentagem e sim o resto da divisão)

 Ex:

    | 3 |
 10 |___|
  1   3 

  
 10 / 3 // 3.33
 10 % 3 // resultado é 1


 Comparedores de igualdade
 
 *NÃO USAR == OU !=*

Operadores Lógicos:
Dica:
professorjosedeassis.github.io/simulador

________________________________________________________________________________
Estudo das variáveis
 - String (caracteres(escrita))
 - Numéricas (números)
 - Booleanas (verdadeiro ou falso)

Obs: No JavaScript as variáveis são dinamicamente tipadas
const (cirar uma constante)
var ou let (criar uma variável) *** JAMAIS UTILIZAR O VAR***

Tipagem dinâmicaa:

No JS o tipo string é definido quando o conteúdo da variável estiver entre aspas " "

Variáveis numéricas podem ser números inteiros e não inteiros 
Obs: , (vírgula é caractere e não número) se necessário converter a entrada de dados de "," para "." .replace(",",".")

Na entrada de dados numéricos via terminal ou formulários é necesário converter para números

classe Number: 
____________________________________________________________________________________________________________________

_________________________________________________________________________________
Git e Github

Configurando o Git
-Instalar
 - abrir o git bash
    - git config --global user.name "Fonseca-J"
    - git config --global user.email "jf-fonsec@hotmail.com"
    - git clone link_do_repositório (clonar o repositóriona maquina local)
      Obs: digitar os comandos na raiz do repositório.
    - git status ( verifica o status do repositório em relação ao Github)
    - git add . (adiciona todas as alterações)
    - git commit -m "descrição das alterações"
    



   












