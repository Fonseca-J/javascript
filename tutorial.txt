Boas Práticas na Programação:

1) Documentação
/**
 * Descrição do código (o que faz?)
 * @author Nome do autor do código
 * @link https:// ....
 */

2) Código Limpo
 - Não abusar de comentários

3) Nomeação:
   - Não usar caracteres especiais, espaços e acentos
   - Nomes de aqrquivos, variáveis devem ser escritos com (letra minúscula), iniciar com caixa alta (letra maiúscula) apenas em classes modelos.
   - definir nomes que tenham relação com problemas a serem resolvidos.

4) Alinhamento (identação do código)

5) Utilizar a menor quantidade de código possível



  
   
 
 ------------------------------------------------------------------------------------------------
 Comandos de terminal:

 cls ou clear ctrl+l (limpar a tela do terminal)
 node -v (exibe a versão do node)
 cd pasta (entar na pasta)
 cd .. (voltar um nível)
 dir ou ls (listar arquivos e diretórios)
 node arquivo.js (executar um arquivo JavaScript)
 seta pra cima (repete o comando)
 <tab> completa o comando
__________________________________________________________________________________________________
VSCode: Dicas
- combinação de teclas
    Alt + Shift + f //alinhamento
    VS Code: Produtividade Infinita (repositório)


__________________________________________________________________________________________________
JavaScript

Características:

- Sentenças e não linhas de código
- ; é opcional
- console.clear() //limpar a tela do console
- console.log() //escrever no console
- // comentário de linhas
Podemos usar aspas "  " ou ' '
Não podemos usar " ' aspas diferentes
Dica: Usar em "textos" aspas
      Usar em bibliotecas ou caminhos 'apóstrofe'

___________________________________________________________________________________________________
Operedores

 Observação:
 - Regra de Precedência
 - % (não calcula porcentagem e sim o resto da divisão)

 Ex:

    | 3 |
 10 |___|
  1   3 

  
 10 / 3 // 3.33
 10 % 3 // resultado é 1


 Comparedores de igualdade
 
 *NÃO USAR == OU !=*

Operadores Lógicos:
Dica:
professorjosedeassis.github.io/simulador

________________________________________________________________________________
Estudo das variáveis
 - String (caracteres(escrita))
 - Numéricas (números)
 - Booleanas (verdadeiro ou falso)

Obs: No JavaScript as variáveis são dinamicamente tipadas
const (cirar uma constante)
var ou let (criar uma variável) *** JAMAIS UTILIZAR O VAR***

Tipagem dinâmicaa:

No JS o tipo string é definido quando o conteúdo da variável estiver entre aspas " "

Variáveis numéricas podem ser números inteiros e não inteiros 
Obs: , (vírgula é caractere e não número) se necessário converter a entrada de dados de "," para "." .replace(",",".")

Na entrada de dados numéricos via terminal ou formulários é necesário converter para números

classe Number: 
____________________________________________________________________________________________________________________

_________________________________________________________________________________
Git e Github

Configurando o Git
-Instalar
 - abrir o git bash
    - git config --global user.name "Fonseca-J"
    - git config --global user.email "jf-fonsec@hotmail.com"
    - git clone link_do_repositório (clonar o repositóriona maquina local)
      Obs: digitar os comandos na raiz do repositório.
    - git status ( verifica o status do repositório em relação ao Github)
    - git add . (adiciona todas as alterações)
    - git commit -m "descrição das alterações"
    
__________________________________________________________________________________
NODE - Plataforma para uso do JS fora do browser(navegador)

___ V8 (google chrome)
___ Bibliotecas C / C++
___ pacotes npm (node packager manager)
npm ls (lista pacotes)
npm i oi npm install ( instala o pacote)
npm r nome_do_pacote (remover pacote)

Pacote = Módulo = bibliotecas
Para usar um pacote é necessário fazer a importação no inicio do código (logo abaixo do cabeçalho do documento)
__________________________________________________________________________________________________
Algorítmo: "receita de bolo"

Exemlo 1:
Calcular a média de 2 notas


         nota 1 + nota 2
média = _________________
               2

Váriáveis: nota1, nota2, media

Entrada: nota1,nota2
Processamento: media = (nota1 + nota2) / 2
Saída: media (resultado)

________________________________________________________________________________
Exemplo 2:
Desenvolver um app modo console para calculo de porcentagem: 
Ex: 10% de 200 = 20
     x      y    vlr


200(y) ---------- 100%
vlr ----------  10%(x)


vlr * 100 = y * x


          y * x                    2000
vlr = ______________      vlr = ______________
           100                       100


vlr =(x * y) / 100


_________________________________________________________________________________
Exercicio:

valor total: 200.00
desconto :    5%
Total com desconto: 190.00

//Variáveis

total, desconto, totalDesconto

//entrada
desconto = Number(input.question("Digite o valor do desconto em %: "))
total = Number(input.question("Digite o valor total: "))


//processamento 1
valor = (desconto * total) / 100

//saída1
console.log(`Valor total: R$ ${total.toFixed(1)}`)
console.log(`Desconto: ${desconto}%`)
console.log(`Valor do Desconto: R$ ${valor.toFixed(1)}`)

//processamento 2
totalDesconto = total - valor
//saida 2
totalDesconto
_______________________________________________________________________________
Exercicio 2:

Desenvolver um app no console para conversão de moeda (real para euro)



//variáveis
 let real, euro, total

 console.clear()
 console.log("Convesro Real x Euro")

//entrada
 real = Number(input.question("Digite total em reais a serem convertidos: "))
 euro = Number(input.question("Digite a cotação do euro: "))

 //processamento
 total = real / euro

 //saída
 console.log(`R$ ${real.toFixed(2)} equivalem = E${total.toFixed(2)} euros`)



//entrada
euro = Number(input.question("Digite o valor do euro: "))
real = Number(input.question("Digite o valor do real: "))

//processamento 1
total = (real * euro)

____________________________________________________________________________________
Exercício (Prova):

Calcular a frequência cardíaca máxima
_____________________________________________________________________________________
Estruturas de controle

condicionais:
if eof-else (encadeamento, aninhamento else-if) switch-case 

repetições:
for while do-while

if (condição {
   // condição verdadeira
})

if (condição) {
   // condição verdadeira
} else {
   //condição falsa
}


Observações:

- Sempre uma resposta será exibida independente da condição.
- Não pode existir uma condição verdadeira ou falsa ao mesmo tempo.

_______________________________________________________________________________
Exemplo de uso da estrutura else if
No exemplo cálculo da médioa, estabelecer as seguintes condinções:
1) Se o aluno tiver média menor que 2 (Reprovado)
2) Se a média do aluno estiver entre 2 e 5 (RECUPERAÇÃO)
3) Se a média for igual ou superior a 5 (APROVADO) 

Resumnindo:
if(condição 1 ) {
   //condição 1 verdadeira

} else if(condição 2 ) {
   //condição 2 verdadeira

} else {
   //Nenhumn das condções anteriores verdadeiras
}

Exercicio 3:
No Brasil, o voto pode ser proibido, obrigatório ou facultativo, de acordo com os seguintes critérios:

idade menor que 16 (proibido votar)
ideade entre 18 e 70 (incluindo 18 e 70) o voto é obrigatéorio
idades entre 16 e 17 ou acima de 70 (voto é opicional)

Desenvolva no console do APP JS para verificar em função da idade a obrigação ou não de votar.
---------------------------------------------------------------------------------------------------------------------------------

Estrutura  de controle condicional: switch-case
Sintaxe: 
variável (número inteiro ou letra)
switch(variável) {
   case: 1
      //código se o valor da variável for igual a 1
      break
   case: 2
      //código se o valor da variável for igual a 2
      break
   default:
      //código caso valor diferente de 1 ou 2
      break      
}
------------------------------------------------------------------------------------------------------------------------------------
Exercício 4: Desenvolva no console do JS um aplicativo que faça o sorteio do jogo de dado, ao resultado associar 


⚀ - face1
⚁ - face2
⚂ - face3
⚃ - face4
⚄ - face5
⚅ - face6
---------------------------------------------------------------------------------------------------------------------------------------
Estruturas de controle - laços de repetições

for
while
do-while

for - estrutura de repetição finitas (determinada)
for (let i=1; condição; incremento/decremento) {
   //início ; repetir enquanto condição verdadeira; i++ ou i-- 
}

//observação: a variável declarada dentro da estrutura deve ser um número inteiro

-----------------------------------------------------------------------------------------------------------------------------
Escreva um codigo que some todos os números de 1 a 100 e exibe o resultado no console

Escreva um codigo que use o laço for para contar quantos números pares existem de 1 a 20



















   












